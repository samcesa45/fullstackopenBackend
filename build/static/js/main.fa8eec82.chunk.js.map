{"version":3,"sources":["exercise4.1-4.2/service/blog.js","exercise4.1-4.2/component/Blog.js","exercise4.1-4.2/service/login.js","exercise4.1-4.2/hooks/index.js","exercise4.1-4.2/component/Notification.js","exercise4.1-4.2/App.js","reportWebVitals.js","index.js"],"names":["baseUrl","token","setToken","newToken","getAll","a","axios","get","request","data","create","newObject","auth","config","headers","Authorization","post","response","blogService","update","id","put","blogStyle","paddingTop","paddingLeft","border","borderWidth","marginBottom","Blog","blog","setUpdate","user","useState","visible","setVisible","removeVisible","setRemoveVisible","hideWhenVisible","display","showWhenVisible","hideWhenNotOwned","like","event","preventDefault","likes","newBlog","Math","floor","random","remove","window","confirm","title","author","style","className","onClick","username","url","type","loginService","login","credentials","useField","value","setValue","initialValue","onChange","target","reset","Notification","message","App","blogs","setBlogs","errorMessage","setErrorMessage","setUsername","password","setPassword","setUser","useEffect","then","initialBlog","loggedUserJSON","localStorage","getItem","JSON","parse","handleLogin","setItem","stringify","setTimeout","addBlog","concat","onSubmit","name","removeItem","error","map","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fa8eec82.chunk.js","sourcesContent":["import axios from 'axios';\r\nconst baseUrl = '/api/blogs';\r\n\r\nlet token = null;\r\n\r\nconst setToken = (newToken) => {\r\n\ttoken = `bearer ${newToken}`;\r\n};\r\n\r\nconst getAll = async () => {\r\n\tconst request = await axios.get(baseUrl);\r\n\treturn request.data;\r\n};\r\n\r\nconst create = async (newObject, auth) => {\r\n\tsetToken(auth);\r\n\tconst config = {\r\n\t\theaders: { Authorization: token },\r\n\t};\r\n\r\n\tconst response = await axios.post(baseUrl, newObject, config);\r\n\treturn response.data;\r\n};\r\n\r\nconst update = async (id, newObject) => {\r\n\tconst response = await axios.put(`${baseUrl}/${id}`, newObject);\r\n\treturn response.data;\r\n};\r\n\r\nexport const blogService = {\r\n\tsetToken,\r\n\tgetAll,\r\n\tcreate,\r\n\tupdate,\r\n};\r\n","import React, { useState } from 'react';\r\nimport { blogService } from '../service/blog';\r\n\r\nconst blogStyle = {\r\n\tpaddingTop: 10,\r\n\tpaddingLeft: 2,\r\n\tborder: 'solid',\r\n\tborderWidth: 1,\r\n\tmarginBottom: 5,\r\n};\r\n\r\nconst Blog = ({ blog, setUpdate, user }) => {\r\n\tconst [visible, setVisible] = useState(false);\r\n\tconst [removeVisible, setRemoveVisible] = useState(false);\r\n\r\n\tconst hideWhenVisible = { display: visible ? 'none' : '' };\r\n\tconst showWhenVisible = { display: visible ? '' : 'none' };\r\n\r\n\tconst hideWhenNotOwned = { display: removeVisible ? 'none' : '' };\r\n\r\n\tconst rules = () => {\r\n\t\tsetVisible(true);\r\n\t\tif (blog.user.username !== user.username) {\r\n\t\t\tsetRemoveVisible(true);\r\n\t\t}\r\n\t};\r\n\r\n\tconst like = async (event) => {\r\n\t\tevent.preventDefault();\r\n\t\tconst likes = blog.likes + 1;\r\n\t\tconst newBlog = { ...blog, likes };\r\n\t\tawait blogService.update(blog.id, newBlog);\r\n\t\tsetUpdate(Math.floor(Math.random() * 100));\r\n\t};\r\n\r\n\tconst remove = async (event) => {\r\n\t\tevent.preventDefault();\r\n\r\n\t\tif (window.confirm(`remove blog ${blog.title}) by ${blog.author}`)) {\r\n\t\t\tblogService.setToken(user.token);\r\n\t\t\tawait blogService.remove(blog.id, user.token);\r\n\t\t\tsetUpdate(Math.floor(Math.random() * 100));\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div style={blogStyle} className=\"all\">\r\n\t\t\t<div style={hideWhenVisible}>\r\n\t\t\t\t<div onClick={rules} className=\"titleauthor\">\r\n\t\t\t\t\t{blog.title} {blog.author}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div style={showWhenVisible} className=\"titleauthorlikedelete\">\r\n\t\t\t\t{blog.title} <br />\r\n\t\t\t\t{blog.url} <br />\r\n\t\t\t\t<div onClick={like}>\r\n\t\t\t\t\t{blog.likes} likes\r\n\t\t\t\t\t<button type=\"submit\">like</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div onClick={remove} style={hideWhenNotOwned}>\r\n\t\t\t\t\tadded by {blog.author}\r\n\t\t\t\t\t<button type=\"submit\">remove</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Blog;\r\n\r\n// import React from 'react';\r\n// const Blog = ({ blog }) => {\r\n// \treturn (\r\n// \t\t<div>\r\n// \t\t\t{blog.title} {blog.author}\r\n// \t\t</div>\r\n// \t);\r\n// };\r\n\r\n// export default Blog;\r\n","import axios from 'axios';\r\nconst baseUrl = '/api/login';\r\n\r\nconst login = async (credentials) => {\r\n\tconst response = await axios.post(baseUrl, credentials);\r\n\treturn response.data;\r\n};\r\n\r\nexport const loginService = { login };\r\n","import { useState } from 'react';\r\n\r\nexport const useField = (type) => {\r\n\tconst [value, setValue] = useState();\r\n\r\n\tconst onChange = (event) => {\r\n\t\tsetValue(event.target.value);\r\n\t};\r\n\r\n\tconst reset = () => {\r\n\t\tsetValue('');\r\n\t};\r\n\r\n\tconst initialValue = {\r\n\t\ttype: type,\r\n\t\tvalue: value,\r\n\t\tonChange: onChange,\r\n\t};\r\n\r\n\treturn {\r\n\t\tinitialValue,\r\n\r\n\t\treset,\r\n\t};\r\n};\r\n","import React from 'react';\r\n\r\nconst Notification = ({ message }) => {\r\n\treturn <div>helloworld</div>;\r\n};\r\n\r\nexport default Notification;\r\n","import React, { useEffect, useState } from 'react';\r\nimport Blog from './component/Blog';\r\nimport { blogService } from './service/blog';\r\nimport { loginService } from './service/login';\r\nimport { useField } from './hooks';\r\nimport Notification from './component/Notification';\r\n\r\nconst App = () => {\r\n\tconst [blogs, setBlogs] = useState([]);\r\n\r\n\tconst [errorMessage, setErrorMessage] = useState('');\r\n\tconst [update, setUpdate] = useState(null);\r\n\r\n\tconst [username, setUsername] = useState('');\r\n\tconst [password, setPassword] = useState('');\r\n\tconst [user, setUser] = useState(null);\r\n\tconst title = useField('text');\r\n\tconst author = useField('text');\r\n\tconst url = useField('text');\r\n\r\n\tuseEffect(() => {\r\n\t\tblogService.getAll().then((initialBlog) => {\r\n\t\t\tsetBlogs(initialBlog);\r\n\t\t});\r\n\t}, [update]);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst loggedUserJSON = window.localStorage.getItem('loggedBlogUser');\r\n\t\tif (loggedUserJSON) {\r\n\t\t\tconst user = JSON.parse(loggedUserJSON);\r\n\t\t\tsetUser(user);\r\n\t\t\tblogService.getAll().then((initialBlog) => {\r\n\t\t\t\tsetBlogs(initialBlog);\r\n\t\t\t});\r\n\t\t}\r\n\t}, []);\r\n\tconst handleLogin = async (event) => {\r\n\t\tevent.preventDefault();\r\n\t\ttry {\r\n\t\t\tconst user = await loginService.login({ username, password });\r\n\t\t\twindow.localStorage.setItem('loggedBlogUser', JSON.stringify(user));\r\n\t\t\tblogService.setToken(user.token);\r\n\t\t\tsetUser(user);\r\n\t\t\tsetUsername('');\r\n\t\t\tsetPassword('');\r\n\t\t} catch (exception) {\r\n\t\t\tsetErrorMessage('Wrong Credentials');\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tsetErrorMessage(null);\r\n\t\t\t}, 5000);\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleLogout = () => {\r\n\t\ttry {\r\n\t\t\twindow.localStorage.removeItem('loggedBlogUser');\r\n\t\t} catch (error) {\r\n\t\t\tsetErrorMessage('user has been logged out');\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tsetErrorMessage(null);\r\n\t\t\t}, 5000);\r\n\t\t}\r\n\t};\r\n\r\n\tconst addBlog = async (event) => {\r\n\t\tevent.preventDefault();\r\n\t\ttry {\r\n\t\t\tconst newBlog = {\r\n\t\t\t\tuser: user,\r\n\t\t\t\ttitle: title.initialValue.value,\r\n\t\t\t\tauthor: author.initialValue.value,\r\n\t\t\t\turl: url.initialValue.value,\r\n\t\t\t};\r\n\t\t\tconst auth = user.token;\r\n\r\n\t\t\tconst blog = await blogService.create(newBlog, auth);\r\n\t\t\tsetBlogs(blogs.concat(blog));\r\n\t\t\ttitle.reset();\r\n\t\t\tauthor.reset();\r\n\t\t\turl.reset();\r\n\t\t\tsetErrorMessage(`a new blog ${newBlog.title} by ${newBlog.author} added`);\r\n\t\t} catch (exception) {\r\n\t\t\tsetErrorMessage('oops something went wrong');\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tsetErrorMessage(null);\r\n\t\t\t}, 5000);\r\n\t\t}\r\n\t};\r\n\r\n\tconst loginForm = () => (\r\n\t\t<form onSubmit={handleLogin}>\r\n\t\t\t<div>\r\n\t\t\t\tusername\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tvalue={username}\r\n\t\t\t\t\tname=\"Username\"\r\n\t\t\t\t\tonChange={({ target }) => setUsername(target.value)}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\tpassword\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\tvalue={password}\r\n\t\t\t\t\tname=\"Password\"\r\n\t\t\t\t\tonChange={({ target }) => setPassword(target.value)}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<button type=\"submit\">login</button>\r\n\t\t</form>\r\n\t);\r\n\r\n\tconst blogForm = () => (\r\n\t\t<div>\r\n\t\t\t{blogs.map((blog) => (\r\n\t\t\t\t<Blog key={blog.id} blog={blog} user={user} setUpdate={setUpdate} />\r\n\t\t\t))}\r\n\t\t</div>\r\n\t);\r\n\r\n\tconst newBlogForm = () => (\r\n\t\t<form onSubmit={addBlog}>\r\n\t\t\t<h2>create new blog</h2>\r\n\t\t\t<div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\ttitle:\r\n\t\t\t\t\t<input {...title.initialValue} />\r\n\t\t\t\t</div>\r\n\t\t\t\tauthor:\r\n\t\t\t\t<input {...author.initialValue} />\r\n\t\t\t\t<div>\r\n\t\t\t\t\turl:\r\n\t\t\t\t\t<input {...url.initialValue} />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<button type=\"submit\">create</button>\r\n\t\t</form>\r\n\t);\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Notification message={errorMessage} />\r\n\t\t\t{user === null ? (\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<h2>Login To Application</h2>\r\n\t\t\t\t\t{loginForm()}\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<h2>Blogs</h2>\r\n\t\t\t\t\t<p>{user.name} has logged in</p>\r\n\t\t\t\t\t<button onClick={handleLogout}>logout</button>\r\n\t\t\t\t\t{blogForm()}\r\n\t\t\t\t\t<br />\r\n\r\n\t\t\t\t\t{newBlogForm()}\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './exercise4.1-4.2/App';\n\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}