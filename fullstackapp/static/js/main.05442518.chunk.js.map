{"version":3,"sources":["services/notes.js","component/Note.js","component/Notification.js","component/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["baseUrl","request","axios","get","nonExisting","id","content","date","important","then","response","data","concat","newObject","post","put","Note","note","toggleImportance","label","className","onClick","Notification","message","Footer","style","color","fontStyle","fontSize","App","props","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","notesToShow","filter","useEffect","noteService","initialNote","console","log","length","map","find","n","changedNote","returnedNote","catch","error","setTimeout","toggleImportanceOf","onSubmit","event","preventDefault","noteObject","Date","toISOString","Math","random","value","onChange","target","type","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.05442518.chunk.js","sourcesContent":["import axios from 'axios';\r\nconst baseUrl = '/api/notes';\r\n\r\nconst getAll = () => {\r\n\tconst request = axios.get(baseUrl);\r\n\tconst nonExisting = {\r\n\t\tid: 10000,\r\n\t\tcontent: 'This  is not saved to server',\r\n\t\tdate: '2019-05-30T17:30:31.098Z',\r\n\t\timportant: true,\r\n\t};\r\n\treturn request.then((response) => response.data.concat(nonExisting));\r\n};\r\n\r\nconst create = (newObject) => {\r\n\tconst request = axios.post(baseUrl, newObject);\r\n\treturn request.then((response) => response.data);\r\n};\r\n\r\nconst update = (id, newObject) => {\r\n\tconst request = axios.put(`${baseUrl}/${id}`, newObject);\r\n\treturn request.then((response) => response.data);\r\n};\r\n\r\nexport default {\r\n\tgetAll,\r\n\tcreate,\r\n\tupdate,\r\n};\r\n","import React from 'react';\r\nconst Note = ({ note, toggleImportance }) => {\r\n\tconst label = note.important ? 'make not important' : 'make important';\r\n\treturn (\r\n\t\t<li className=\"note\">\r\n\t\t\t{note.content}\r\n\t\t\t<button onClick={toggleImportance}>{label}</button>\r\n\t\t</li>\r\n\t);\r\n};\r\nexport default Note;\r\n","const Notification = ({ message }) => {\r\n\tif (message === null) {\r\n\t\treturn null;\r\n\t}\r\n\r\n\treturn <div className=\"error\">{message}</div>;\r\n};\r\n\r\nexport default Notification;\r\n","import React from 'react';\r\nconst Footer = () => {\r\n\tconst footerStyle = {\r\n\t\tcolor: 'green',\r\n\t\tfontStyle: 'italic',\r\n\t\tfontSize: 16,\r\n\t};\r\n\treturn (\r\n\t\t<div style={footerStyle}>\r\n\t\t\t<br />\r\n\t\t\t<em>\r\n\t\t\t\tNote app, Department of Computer Science, University of Helsinki 2021\r\n\t\t\t</em>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Footer;\r\n","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport noteService from './services/notes';\nimport Note from './component/Note';\nimport Notification from './component/Notification';\nimport Footer from './component/Footer';\n\nconst App = (props) => {\n\tconst [notes, setNotes] = useState([]);\n\tconst [newNote, setNewNote] = useState('');\n\tconst [showAll, setShowAll] = useState(true);\n\tconst [errorMessage, setErrorMessage] = useState('some error message');\n\tconst addNote = (event) => {\n\t\tevent.preventDefault();\n\t\tconst noteObject = {\n\t\t\tcontent: newNote,\n\t\t\tdate: new Date().toISOString(),\n\t\t\timportant: Math.random() < 0.5,\n\t\t};\n\n\t\tnoteService.create(noteObject).then((returnedNote) => {\n\t\t\tsetNotes(notes.concat(returnedNote));\n\t\t\tsetNewNote('');\n\t\t});\n\t};\n\n\tconst handleNoteChange = (event) => {\n\t\tevent.preventDefault();\n\t\tsetNewNote(event.target.value);\n\t};\n\n\tconst notesToShow = showAll ? notes : notes.filter((note) => note.important);\n\n\tconst toggleImportanceOf = (id) => {\n\t\tconst note = notes.find((n) => n.id === id);\n\t\tconst changedNote = { ...note, important: !note.important };\n\n\t\tnoteService\n\t\t\t.update(id, changedNote)\n\t\t\t.then((returnedNote) => {\n\t\t\t\tsetNotes(notes.map((note) => (note.id !== id ? note : returnedNote)));\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tsetErrorMessage(\n\t\t\t\t\t`Note '${note.content}' was already removed from server`\n\t\t\t\t);\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tsetErrorMessage(null);\n\t\t\t\t}, 2000);\n\n\t\t\t\tsetNotes(notes.filter((n) => n.id !== id));\n\t\t\t});\n\t};\n\n\tuseEffect(() => {\n\t\tnoteService.getAll().then((initialNote) => {\n\t\t\tsetNotes(initialNote);\n\t\t});\n\t}, []);\n\tconsole.log('render', notes.length, 'notes');\n\treturn (\n\t\t<div>\n\t\t\t<h1>Notes</h1>\n\t\t\t<Notification message={errorMessage} />\n\t\t\t<div>\n\t\t\t\t<button onClick={() => setShowAll(!showAll)}>\n\t\t\t\t\tshow {showAll ? 'important' : 'all'}\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t\t<ul>\n\t\t\t\t{notesToShow.map((note) => (\n\t\t\t\t\t<Note\n\t\t\t\t\t\tkey={note.id}\n\t\t\t\t\t\tnote={note}\n\t\t\t\t\t\ttoggleImportance={() => toggleImportanceOf(note.id)}\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t\t</ul>\n\t\t\t<form onSubmit={addNote}>\n\t\t\t\t<input value={newNote} onChange={handleNoteChange} />\n\t\t\t\t<button type=\"submit\">save</button>\n\t\t\t</form>\n\n\t\t\t<Footer />\n\t\t</div>\n\t);\n};\n\nexport default App;\n\n// {\n//   \"notes\": [\n//     {\n//       \"id\": 1,\n//       \"content\": \"HTML is easy\",\n//       \"date\": \"2019-05-30T17:30:31.098Z\",\n//       \"important\": false\n//     },\n//     {\n//       \"id\": 2,\n//       \"content\": \"Browser can execute only JavaScript\",\n//       \"date\": \"2019-05-30T18:39:34.091Z\",\n//       \"important\": false\n//     },\n//     {\n//       \"id\": 3,\n//       \"content\": \"GET and POST are the most important methods of HTTP protocol\",\n//       \"date\": \"2019-05-30T19:20:14.298Z\",\n//       \"important\": false\n//     },\n//     {\n//       \"content\": \"What to do when you seem confused\",\n//       \"date\": \"2021-04-08T10:30:17.925Z\",\n//       \"important\": false,\n//       \"id\": 4\n//     },\n//     {\n//       \"content\": \"add this to my note platform\",\n//       \"date\": \"2021-04-08T11:09:21.132Z\",\n//       \"important\": false,\n//       \"id\": 5\n//     }\n//   ]\n// }\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}